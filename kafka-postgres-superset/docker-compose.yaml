version: '3.8'

x-function: &servicetemplates
  labels:
    function: "true"
  networks:
    - pipeline-networks
  init: true
  restart: always

services:

  #---> Zookeeper server
  zookeeper:
    <<: *servicetemplates
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 5s

  #---> Kafka Broker server
  kafka:
    <<: *servicetemplates
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 5s
    depends_on:
      zookeeper:
        condition: service_started

  schema-registry:
    <<: *servicetemplates
    image: confluentinc/cp-schema-registry:7.8.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092

  postgres:
    <<: *servicetemplates
    container_name: postgres
    image: postgres:14.15-alpine3.20
    environment:
      POSTGRES_USER: salseusr
      POSTGRES_PASSWORD: salsepasswd
      PGDATA: /data/postgres
      POSTGRES_DB: salse-data
    volumes:
      - postgres-data:/data/postgres
      - ./postgres-tables/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5332:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d salse-data" ]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  pipeline-networks:
    driver: bridge

volumes:
  postgres-data:
